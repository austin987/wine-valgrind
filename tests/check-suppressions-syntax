#!/bin/sh

set -e
set -u
set -x

die() {
    echo "$@"
    exit 1
}

# First, ensure Valgrind works:
if [ ! "$(command -v valgrind)" ] ; then
    die "Valgrind does not appear to be in \$PATH"
fi

if [ -x /bin/true ] ; then
    TRUE="/bin/true"
elif [ -x /usr/bin/true ] ; then
    TRUE="/usr/bin/true"
else
    die "Couldn't find true binary!"
fi

valgrind "$TRUE" || die "Valgrind failed for $TRUE"

# Now, check that individual files are working:
for file in valgrind-suppressions-*; do
    valgrind --suppressions="$file" "$TRUE" || die "file $file appears broken"
done

# Avoid any absolute library paths:
for file in valgrind-suppressions-*; do
    if grep -e '/lib.*/' -e '/home/' "$file"; then
        die "file $file contains absolute library paths, should be relative"
    fi
done

# Avoid any absolute library versions
# (better to be overly broad with external libraries, some of which frequently change):
for file in valgrind-suppressions-*; do
    if grep '\.so.[0-9]' "$file"; then
        die "file $file contains version specific suppressions; should be generic"
    fi
done

echo "Tests succeeded"
